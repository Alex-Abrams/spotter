{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getThatToken = getThatToken;\nexports.getThoseItems = getThoseItems;\nexports.checkLoggedIn = checkLoggedIn;\nexports.fetchToken = fetchToken;\nexports.getAuthTokenPls = getAuthTokenPls;\nexports.requestAuthToken = exports.loggedInUser = exports.receiveAuthToken = exports.receiveCurrentUser = exports.LOGGED_IN_USER = exports.RECEIVE_AUTH_TOKEN = exports.FAILED_LOGIN = exports.LOAD_SPINNER = exports.RECEIVE_CURRENT_USER = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _crossFetch = _interopRequireDefault(require(\"cross-fetch\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar RECEIVE_CURRENT_USER = 'RECEIVE_CURRENT_USER';\nexports.RECEIVE_CURRENT_USER = RECEIVE_CURRENT_USER;\nvar LOAD_SPINNER = 'LOAD_SPINNER';\nexports.LOAD_SPINNER = LOAD_SPINNER;\nvar FAILED_LOGIN = 'FAILED_LOGIN';\nexports.FAILED_LOGIN = FAILED_LOGIN;\nvar RECEIVE_AUTH_TOKEN = \"RECEIVE_AUTH_TOKEN\";\nexports.RECEIVE_AUTH_TOKEN = RECEIVE_AUTH_TOKEN;\nvar LOGGED_IN_USER = \"LOGGED_IN_USER\";\nexports.LOGGED_IN_USER = LOGGED_IN_USER;\n\nvar receiveCurrentUser = function receiveCurrentUser(currentUser) {\n  return {\n    type: RECEIVE_CURRENT_USER,\n    currentUser: currentUser\n  };\n};\n\nexports.receiveCurrentUser = receiveCurrentUser;\n\nvar receiveAuthToken = function receiveAuthToken(auth_token) {\n  return {\n    type: RECEIVE_AUTH_TOKEN,\n    auth_token: auth_token\n  };\n};\n\nexports.receiveAuthToken = receiveAuthToken;\n\nvar loggedInUser = function loggedInUser(auth_token) {\n  return {\n    type: LOGGED_IN_USER,\n    auth_token: auth_token\n  };\n};\n\nexports.loggedInUser = loggedInUser;\n\nfunction getThatToken(email, password) {\n  return function action(dispatch) {\n    var request = (0, _crossFetch.default)('http://10.0.2.2:3000/authenticate', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: \"\" + email,\n        password: \"\" + password\n      })\n    });\n    return request.then(function (response) {\n      return response.json();\n    }, function (err) {\n      return console.log(\"error!!: \", err);\n    }).then(function (json) {\n      return dispatch(receiveAuthToken(json));\n    }, function (err) {\n      return console.log(\"jsonerror \", json);\n    });\n  };\n}\n\nfunction getThoseItems(auth_token) {\n  return function action(dispatch) {\n    var request = (0, _crossFetch.default)(\"http://10.0.2.2:3000/items\", {\n      method: 'GET',\n      headers: {\n        \"Authorization\": auth_token\n      }\n    });\n    return request.then(function (response) {\n      return response.json();\n    }, function (err) {\n      return console.log('items response error: ', err);\n    }).then(function (json) {\n      return console.log(json);\n    }, function (err) {\n      return console.log(\"items json error\", err);\n    });\n  };\n}\n\nfunction checkLoggedIn(auth_token) {\n  return function action(dispatch) {\n    var request = (0, _crossFetch.default)(\"http://10.0.2.2:3000/items\", {\n      method: 'GET',\n      headers: {\n        \"Authorization\": auth_token\n      }\n    });\n    return request.then(function (response) {\n      if (response.status == 200) dispatch(receiveAuthToken(auth_token));\n    }, function (err) {\n      return console.log(\"checkLoggedIn error\", err);\n    });\n  };\n}\n\nfunction fetchToken() {\n  return function (dispatch) {\n    (0, _crossFetch.default)('http://10.0.2.2:3000/authenticate', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: \"alex@gmail.com\",\n        password: 'password'\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return console.log(json);\n    });\n  };\n}\n\nvar requestAuthToken = function requestAuthToken() {\n  return function (dispatch) {\n    return (0, _crossFetch.default)('http://10.0.2.2:3000/authenticate', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: \"alex@gmail.com\",\n        password: 'password'\n      })\n    }).then(function (response) {\n      response.json();\n    }).then(function (json) {\n      console.log(\"jsonauthtoken\", json.auth_token);\n      {\n        dispatch(receiveAuthToken(json.auth_token));\n      }\n      ;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\n\nexports.requestAuthToken = requestAuthToken;\n\nfunction getAuthToken() {\n  return _regenerator.default.async(function getAuthToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", (0, _crossFetch.default)('http://10.0.2.2:3000/authenticate', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email: \"alex@gmail.com\",\n              password: 'password'\n            })\n          }).then(function (response) {\n            response.json();\n          }).then(function (json) {\n            console.log(\"jsonauthtoken\", json.auth_token);\n            return json.auth_token;\n          }).catch(function (error) {\n            console.log(error);\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getAuthTokenPls() {\n  return _regenerator.default.async(function getAuthTokenPls$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", function (dispatch) {\n            (0, _crossFetch.default)('http://10.0.2.2:3000/authenticate', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: \"alex@gmail.com\",\n                password: 'password'\n              })\n            }).then(function (response) {\n              response.json();\n            }).then(function (json) {\n              console.log(\"jsonauthtoken\", json.auth_token);\n              return json.auth_token;\n            }).catch(function (error) {\n              console.log(error);\n            });\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/home/alex/api_test/rn_testapp/actions/auth_actions.js"],"names":["RECEIVE_CURRENT_USER","LOAD_SPINNER","FAILED_LOGIN","RECEIVE_AUTH_TOKEN","LOGGED_IN_USER","receiveCurrentUser","currentUser","type","receiveAuthToken","auth_token","loggedInUser","getThatToken","email","password","action","dispatch","request","method","headers","Accept","body","JSON","stringify","then","response","json","err","console","log","getThoseItems","checkLoggedIn","status","fetchToken","requestAuthToken","catch","error","getAuthToken","getAuthTokenPls"],"mappings":"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","sourcesContent":["export const RECEIVE_CURRENT_USER = 'RECEIVE_CURRENT_USER';\nexport const LOAD_SPINNER = 'LOAD_SPINNER';\nexport const FAILED_LOGIN = 'FAILED_LOGIN';\nexport const RECEIVE_AUTH_TOKEN = \"RECEIVE_AUTH_TOKEN\";\nexport const LOGGED_IN_USER = \"LOGGED_IN_USER\";\nimport fetch from 'cross-fetch';\nimport { AsyncStorage } from 'react-native';\n\n\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser\n});\n\nexport const receiveAuthToken = auth_token => ({\n  type: RECEIVE_AUTH_TOKEN,\n  auth_token\n});\n\nexport const loggedInUser = auth_token => ({\n  type: LOGGED_IN_USER,\n  auth_token\n});\n\n\n////\n//// WINNNNNNNNER!!!!!!!!!\nexport function getThatToken(email, password) {\n  return function action(dispatch) {\n    const request = fetch('http://10.0.2.2:3000/authenticate', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: `${email}`,\n        password: `${password}`\n      })\n    });\n\n    return request.then(\n      // response => console.log(\"REQUQEST!: \", response.json().auth_token),\n      response => response.json(),\n      err => console.log(\"error!!: \", err)\n    ) //;\n    .then(\n      // json => console.log(json),\n\n      json => dispatch(receiveAuthToken(json)),\n      err => console.log(\"jsonerror \", json)\n    );\n\n  }\n}\n////\n//// also winner\nexport function getThoseItems(auth_token) {\n  return function action(dispatch) {\n    const request = fetch(\"http://10.0.2.2:3000/items\", {\n      method: 'GET',\n        headers: {\n          \"Authorization\": auth_token\n        }\n    });\n\n    // console.log(\"request status: \", request);\n\n    return request.then(\n      response => response.json(),\n      // response => console.log(\"response STATUS: \", response.status), // response.status == 200 is what we want\n      err => console.log('items response error: ', err)\n    )\n    .then(\n      json => console.log(json),\n      err => console.log(\"items json error\", err)\n    );\n  }\n}\n\n/// so i basically need a create a geThoseItems function that if it succedds\n/// basically just means that the async token is storage is correct\n\nexport function checkLoggedIn(auth_token) {\n  return function action(dispatch) {\n    const request = fetch(\"http://10.0.2.2:3000/items\", {\n      method: 'GET',\n        headers: {\n          \"Authorization\": auth_token\n        }\n    });\n\n    return request.then(\n      response => {if (response.status == 200) dispatch(receiveAuthToken(auth_token))},\n      err => console.log(\"checkLoggedIn error\", err)\n    );\n  }\n}\n\n\n\n/////\n\n//////// below here not in use\nexport function fetchToken() {\n  return function (dispatch) {\n    fetch('http://10.0.2.2:3000/authenticate', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: \"alex@gmail.com\",\n        password: 'password'\n      })\n    })\n    .then(\n      response => response.json()\n    )\n    .then(json =>\n      console.log(json)\n      // dispatch(receiveAuthToken(json))\n    )\n  } // fun dispatch\n} //fetchToken\n\n////\n\nexport const requestAuthToken = () => dispatch => {\n  return fetch('http://10.0.2.2:3000/authenticate', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: \"alex@gmail.com\",\n        password: 'password'\n      })\n    }).then((response) => {\n      response.json()\n    })\n    .then((json) => {\n      console.log(\"jsonauthtoken\", json.auth_token);\n      {dispatch(receiveAuthToken(json.auth_token))};\n      // console.log(typeof json.auth_token); //string\n      // return json.auth_token;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\n\n// export default getAuthToken();\nasync function getAuthToken() {\n  // async function getAuthToken = () => dispatch => {\n\n    return fetch('http://10.0.2.2:3000/authenticate', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: \"alex@gmail.com\",\n        password: 'password'\n      })\n    }).then((response) => {\n      response.json()\n    })\n    .then((json) => {\n      console.log(\"jsonauthtoken\", json.auth_token);\n      // console.log(typeof json.auth_token); //string\n      return json.auth_token;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n\n  /////// copy\n  export async function getAuthTokenPls() {\n    // async function getAuthToken = () => dispatch => {\n      return function(dispatch) {\n        fetch('http://10.0.2.2:3000/authenticate', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: \"alex@gmail.com\",\n            password: 'password'\n          })\n        }).then((response) => {\n          response.json()\n        })\n        .then((json) => {\n          console.log(\"jsonauthtoken\", json.auth_token);\n          // console.log(typeof json.auth_token); //string\n          return json.auth_token;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      }\n\n    }\n"]},"metadata":{},"sourceType":"script"}