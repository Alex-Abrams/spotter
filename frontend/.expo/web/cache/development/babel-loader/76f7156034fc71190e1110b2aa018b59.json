{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _BaseInput2 = _interopRequireDefault(require(\"./BaseInput\"));\n\nvar _jsxFileName = \"/home/alex/api_test/rn_testapp/node_modules/react-native-textinput-effects/lib/Jiro.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Jiro = function (_BaseInput) {\n  (0, _inherits2.default)(Jiro, _BaseInput);\n\n  var _super = _createSuper(Jiro);\n\n  function Jiro(props, context) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Jiro);\n    _this = _super.call(this, props, context);\n    var animationValue = props.value ? 1 : 0;\n    _this.state = {\n      value: props.value,\n      borderPositionAnim: new _reactNative.Animated.Value(animationValue),\n      borderHeightAnim: new _reactNative.Animated.Value(animationValue),\n      labelPositionAnim: new _reactNative.Animated.Value(animationValue)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Jiro, [{\n    key: \"_toggle\",\n    value: function _toggle(isActive) {\n      var animationValue = isActive ? 1 : 0;\n\n      var borderPositionAnimation = _reactNative.Animated.timing(this.state.borderPositionAnim, {\n        toValue: animationValue,\n        eaasing: _reactNative.Easing.bezier(0.2, 1, 0.3, 1),\n        duration: 200,\n        useNativeDriver: false\n      });\n\n      var borderHeightAnimation = _reactNative.Animated.timing(this.state.borderHeightAnim, {\n        toValue: animationValue,\n        eaasing: _reactNative.Easing.ease,\n        duration: 200,\n        useNativeDriver: false\n      });\n\n      var labelPositionAnimation = _reactNative.Animated.timing(this.state.labelPositionAnim, {\n        toValue: animationValue,\n        eaasing: _reactNative.Easing.ease,\n        duration: 200,\n        useNativeDriver: false\n      });\n\n      if (isActive) {\n        _reactNative.Animated.sequence([borderPositionAnimation, _reactNative.Animated.parallel([labelPositionAnimation, borderHeightAnimation])]).start();\n      } else {\n        _reactNative.Animated.sequence([borderHeightAnimation, _reactNative.Animated.parallel([borderPositionAnimation, labelPositionAnimation])]).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          containerStyle = _this$props.style,\n          inputStyle = _this$props.inputStyle,\n          labelStyle = _this$props.labelStyle,\n          borderColor = _this$props.borderColor,\n          inputHeight = _this$props.height,\n          inputPadding = _this$props.inputPadding;\n      var _this$state = this.state,\n          width = _this$state.width,\n          borderPositionAnim = _this$state.borderPositionAnim,\n          borderHeightAnim = _this$state.borderHeightAnim,\n          labelPositionAnim = _this$state.labelPositionAnim,\n          value = _this$state.value;\n      var totalHeight = inputHeight + 2 * inputPadding;\n      return _react.default.createElement(_reactNative.View, {\n        style: [containerStyle, {\n          height: totalHeight\n        }],\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.border, {\n          height: borderHeightAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [3, inputHeight]\n          }),\n          top: borderPositionAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [totalHeight - 3, 2 * inputPadding]\n          }),\n          backgroundColor: borderColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.TextInput, (0, _extends2.default)({\n        ref: this.input\n      }, this.props, {\n        style: [styles.textInput, inputStyle, {\n          width: width,\n          height: inputHeight,\n          left: inputPadding\n        }],\n        value: value,\n        onBlur: this._onBlur,\n        onChange: this._onChange,\n        onFocus: this._onFocus,\n        underlineColorAndroid: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      })), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.labelContainer, {\n          bottom: labelPositionAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [inputPadding / 2, inputHeight + inputPadding / 4]\n          }),\n          left: inputPadding\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: [styles.label, labelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, label))));\n    }\n  }]);\n  return Jiro;\n}(_BaseInput2.default);\n\nexports.default = Jiro;\nJiro.propTypes = {\n  borderColor: _propTypes.default.string,\n  inputPadding: _propTypes.default.number,\n  height: _propTypes.default.number\n};\nJiro.defaultProps = {\n  borderColor: \"red\",\n  inputPadding: 16,\n  height: 48\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  labelContainer: {\n    position: \"absolute\",\n    backgroundColor: \"transparent\"\n  },\n  label: {\n    fontSize: 13,\n    fontWeight: \"bold\",\n    color: \"#6a7989\"\n  },\n  textInput: {\n    position: \"absolute\",\n    bottom: 0,\n    padding: 0,\n    color: \"black\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  border: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"sources":["/home/alex/api_test/rn_testapp/node_modules/react-native-textinput-effects/lib/Jiro.js"],"names":["Jiro","props","context","animationValue","value","state","borderPositionAnim","Animated","Value","borderHeightAnim","labelPositionAnim","isActive","borderPositionAnimation","timing","toValue","eaasing","Easing","bezier","duration","useNativeDriver","borderHeightAnimation","ease","labelPositionAnimation","sequence","parallel","start","label","containerStyle","style","inputStyle","labelStyle","borderColor","inputHeight","height","inputPadding","width","totalHeight","_onLayout","styles","border","interpolate","inputRange","outputRange","top","backgroundColor","input","textInput","left","_onBlur","_onChange","_onFocus","focus","labelContainer","bottom","BaseInput","propTypes","PropTypes","string","number","defaultProps","StyleSheet","create","position","fontSize","fontWeight","color","padding","right"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Animated,\n  Easing,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from \"react-native\";\n\nimport BaseInput from \"./BaseInput\";\n\nexport default class Jiro extends BaseInput {\n  static propTypes = {\n    borderColor: PropTypes.string,\n    inputPadding: PropTypes.number,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    borderColor: \"red\",\n    inputPadding: 16,\n    height: 48,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    const animationValue = props.value ? 1 : 0;\n    this.state = {\n      value: props.value,\n      borderPositionAnim: new Animated.Value(animationValue),\n      borderHeightAnim: new Animated.Value(animationValue),\n      labelPositionAnim: new Animated.Value(animationValue),\n    };\n  }\n\n  _toggle(isActive) {\n    const animationValue = isActive ? 1 : 0;\n    const borderPositionAnimation = Animated.timing(\n      this.state.borderPositionAnim,\n      {\n        toValue: animationValue,\n        eaasing: Easing.bezier(0.2, 1, 0.3, 1),\n        duration: 200,\n        useNativeDriver: false,\n      }\n    );\n    const borderHeightAnimation = Animated.timing(this.state.borderHeightAnim, {\n      toValue: animationValue,\n      eaasing: Easing.ease,\n      duration: 200,\n      useNativeDriver: false,\n    });\n    const labelPositionAnimation = Animated.timing(\n      this.state.labelPositionAnim,\n      {\n        toValue: animationValue,\n        eaasing: Easing.ease,\n        duration: 200,\n        useNativeDriver: false,\n      }\n    );\n\n    if (isActive) {\n      Animated.sequence([\n        borderPositionAnimation,\n        Animated.parallel([labelPositionAnimation, borderHeightAnimation]),\n      ]).start();\n    } else {\n      Animated.sequence([\n        borderHeightAnimation,\n        Animated.parallel([borderPositionAnimation, labelPositionAnimation]),\n      ]).start();\n    }\n  }\n\n  render() {\n    const {\n      label,\n      style: containerStyle,\n      inputStyle,\n      labelStyle,\n      borderColor,\n      height: inputHeight,\n      inputPadding,\n    } = this.props;\n    const {\n      width,\n      borderPositionAnim,\n      borderHeightAnim,\n      labelPositionAnim,\n      value,\n    } = this.state;\n    const totalHeight = inputHeight + 2 * inputPadding;\n\n    return (\n      <View\n        style={[\n          containerStyle,\n          {\n            height: totalHeight,\n          },\n        ]}\n        onLayout={this._onLayout}\n      >\n        <Animated.View\n          style={[\n            styles.border,\n            {\n              height: borderHeightAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [3, inputHeight],\n              }),\n              top: borderPositionAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [totalHeight - 3, 2 * inputPadding],\n              }),\n              backgroundColor: borderColor,\n            },\n          ]}\n        />\n        <TextInput\n          ref={this.input}\n          {...this.props}\n          style={[\n            styles.textInput,\n            inputStyle,\n            {\n              width,\n              height: inputHeight,\n              left: inputPadding,\n            },\n          ]}\n          value={value}\n          onBlur={this._onBlur}\n          onChange={this._onChange}\n          onFocus={this._onFocus}\n          underlineColorAndroid={\"transparent\"}\n        />\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={[\n              styles.labelContainer,\n              {\n                bottom: labelPositionAnim.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [\n                    inputPadding / 2,\n                    inputHeight + inputPadding / 4,\n                  ],\n                }),\n                left: inputPadding,\n              },\n            ]}\n          >\n            <Text style={[styles.label, labelStyle]}>{label}</Text>\n          </Animated.View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    position: \"absolute\",\n    backgroundColor: \"transparent\",\n  },\n  label: {\n    fontSize: 13,\n    fontWeight: \"bold\",\n    color: \"#6a7989\",\n  },\n  textInput: {\n    position: \"absolute\",\n    bottom: 0,\n    padding: 0,\n    color: \"black\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  border: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}