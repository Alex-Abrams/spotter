{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _BaseInput2 = _interopRequireDefault(require(\"./BaseInput\"));\n\nvar _jsxFileName = \"/home/alex/api_test/rn_testapp/node_modules/react-native-textinput-effects/lib/Hideo.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Hideo = function (_BaseInput) {\n  (0, _inherits2.default)(Hideo, _BaseInput);\n\n  var _super = _createSuper(Hideo);\n\n  function Hideo() {\n    (0, _classCallCheck2.default)(this, Hideo);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(Hideo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          iconClass = _this$props.iconClass,\n          iconColor = _this$props.iconColor,\n          iconSize = _this$props.iconSize,\n          iconName = _this$props.iconName,\n          iconBackgroundColor = _this$props.iconBackgroundColor,\n          containerStyle = _this$props.style,\n          inputStyle = _this$props.inputStyle,\n          inputHeight = _this$props.height;\n      var _this$state = this.state,\n          focusedAnim = _this$state.focusedAnim,\n          value = _this$state.value;\n\n      var AnimatedIcon = _reactNative.Animated.createAnimatedComponent(iconClass);\n\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.container, containerStyle],\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, {\n        style: {\n          backgroundColor: iconBackgroundColor,\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: inputHeight,\n          width: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [60, 40]\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(AnimatedIcon, {\n        name: iconName,\n        color: iconColor,\n        style: {\n          fontSize: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [iconSize, iconSize * 0.6]\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }))), _react.default.createElement(_reactNative.TextInput, (0, _extends2.default)({\n        ref: this.input\n      }, this.props, {\n        style: [styles.textInput, inputStyle],\n        value: value,\n        onBlur: this._onBlur,\n        onChange: this._onChange,\n        onFocus: this._onFocus,\n        underlineColorAndroid: 'transparent',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n  return Hideo;\n}(_BaseInput2.default);\n\nexports.default = Hideo;\nHideo.propTypes = {\n  iconBackgroundColor: _propTypes.default.string,\n  iconClass: _propTypes.default.func.isRequired,\n  iconName: _propTypes.default.string.isRequired,\n  iconColor: _propTypes.default.string,\n  iconSize: _propTypes.default.number\n};\nHideo.defaultProps = {\n  iconColor: 'white',\n  iconSize: 25,\n  iconBackgroundColor: '#899dda',\n  height: 48,\n  animationDuration: 200\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  textInput: {\n    flex: 1,\n    paddingHorizontal: 16,\n    paddingVertical: 0,\n    color: 'black',\n    backgroundColor: 'white',\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["/home/alex/api_test/rn_testapp/node_modules/react-native-textinput-effects/lib/Hideo.js"],"names":["Hideo","props","iconClass","iconColor","iconSize","iconName","iconBackgroundColor","containerStyle","style","inputStyle","inputHeight","height","state","focusedAnim","value","AnimatedIcon","Animated","createAnimatedComponent","styles","container","_onLayout","focus","backgroundColor","justifyContent","alignItems","width","interpolate","inputRange","outputRange","fontSize","input","textInput","_onBlur","_onChange","_onFocus","BaseInput","propTypes","PropTypes","string","func","isRequired","number","defaultProps","animationDuration","StyleSheet","create","flex","flexDirection","paddingHorizontal","paddingVertical","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Hideo extends BaseInput {\n  static propTypes = {\n    /*\n     * this is applied as background color of icon\n     */\n    iconBackgroundColor: PropTypes.string,\n\n    /*\n     * This is the icon component you are importing from react-native-vector-icons.\n     * import FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\n     * iconClass={FontAwesomeIcon}\n     */\n    iconClass: PropTypes.func.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as name prop\n     */\n    iconName: PropTypes.string.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as color prop\n     */\n    iconColor: PropTypes.string,\n    /*\n     * Passed to react-native-vector-icons library as size prop.\n     */\n    iconSize: PropTypes.number,\n  };\n\n  static defaultProps = {\n    iconColor: 'white',\n    iconSize: 25,\n    iconBackgroundColor: '#899dda',\n    height: 48,\n    animationDuration: 200,\n  };\n\n  render() {\n    const {\n      iconClass,\n      iconColor,\n      iconSize,\n      iconName,\n      iconBackgroundColor,\n      style: containerStyle,\n      inputStyle,\n      height: inputHeight,\n    } = this.props;\n    const {\n      focusedAnim,\n      value,\n    } = this.state;\n    const AnimatedIcon = Animated.createAnimatedComponent(iconClass);\n\n    return (\n      <View\n        style={[styles.container, containerStyle]}\n        onLayout={this._onLayout}\n      >\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={{\n              backgroundColor: iconBackgroundColor,\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: inputHeight,\n              width: focusedAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [60, 40],\n              }),\n            }}\n          >\n            <AnimatedIcon\n              name={iconName}\n              color={iconColor}\n              style={{\n                fontSize: focusedAnim.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [iconSize, iconSize * 0.6],\n                }),\n              }}\n            />\n          </Animated.View>\n        </TouchableWithoutFeedback>\n        <TextInput\n          ref={this.input}\n          {...this.props}\n          style={[styles.textInput, inputStyle]}\n          value={value}\n          onBlur={this._onBlur}\n          onChange={this._onChange}\n          onFocus={this._onFocus}\n          underlineColorAndroid={'transparent'}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  textInput: {\n    flex: 1,\n    paddingHorizontal: 16,\n    paddingVertical: 0,\n    color: 'black',\n    backgroundColor: 'white',\n    fontSize: 18,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}