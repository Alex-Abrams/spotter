{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _BaseInput2 = _interopRequireDefault(require(\"./BaseInput\"));\n\nvar _jsxFileName = \"/home/alex/api_test/rn_testapp/node_modules/react-native-textinput-effects/lib/Hoshi.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Hoshi = function (_BaseInput) {\n  (0, _inherits2.default)(Hoshi, _BaseInput);\n\n  var _super = _createSuper(Hoshi);\n\n  function Hoshi() {\n    (0, _classCallCheck2.default)(this, Hoshi);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(Hoshi, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          containerStyle = _this$props.style,\n          inputStyle = _this$props.inputStyle,\n          labelStyle = _this$props.labelStyle,\n          maskColor = _this$props.maskColor,\n          borderColor = _this$props.borderColor,\n          borderHeight = _this$props.borderHeight,\n          inputPadding = _this$props.inputPadding,\n          inputHeight = _this$props.height;\n      var _this$state = this.state,\n          width = _this$state.width,\n          focusedAnim = _this$state.focusedAnim,\n          value = _this$state.value;\n      var flatStyles = _reactNative.StyleSheet.flatten(containerStyle) || {};\n      var containerWidth = flatStyles.width || width;\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.container, containerStyle, {\n          height: inputHeight + inputPadding,\n          width: containerWidth\n        }],\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.TextInput, (0, _extends2.default)({\n        ref: this.input\n      }, this.props, {\n        style: [styles.textInput, inputStyle, {\n          width: width,\n          height: inputHeight,\n          left: inputPadding\n        }],\n        value: value,\n        onBlur: this._onBlur,\n        onChange: this._onChange,\n        onFocus: this._onFocus,\n        underlineColorAndroid: 'transparent',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      })), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.labelContainer, {\n          opacity: focusedAnim.interpolate({\n            inputRange: [0, 0.5, 1],\n            outputRange: [1, 0, 1]\n          }),\n          top: focusedAnim.interpolate({\n            inputRange: [0, 0.5, 0.51, 1],\n            outputRange: [24, 24, 0, 0]\n          }),\n          left: focusedAnim.interpolate({\n            inputRange: [0, 0.5, 0.51, 1],\n            outputRange: [inputPadding, 2 * inputPadding, 0, inputPadding]\n          })\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: [styles.label, labelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, label))), _react.default.createElement(_reactNative.View, {\n        style: [styles.labelMask, {\n          backgroundColor: maskColor,\n          width: inputPadding\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.border, {\n          width: focusedAnim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, width]\n          }),\n          backgroundColor: borderColor,\n          height: borderHeight\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return Hoshi;\n}(_BaseInput2.default);\n\nexports.default = Hoshi;\nHoshi.propTypes = {\n  borderColor: _propTypes.default.string,\n  maskColor: _propTypes.default.string,\n  inputPadding: _propTypes.default.number,\n  height: _propTypes.default.number\n};\nHoshi.defaultProps = {\n  borderColor: 'red',\n  inputPadding: 16,\n  height: 48,\n  borderHeight: 3\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderBottomWidth: 2,\n    borderBottomColor: '#b9c1ca'\n  },\n  labelContainer: {\n    position: 'absolute'\n  },\n  label: {\n    fontSize: 16,\n    color: '#6a7989'\n  },\n  textInput: {\n    position: 'absolute',\n    bottom: 2,\n    padding: 0,\n    color: '#6a7989',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  labelMask: {\n    height: 24\n  },\n  border: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"sources":["/home/alex/api_test/rn_testapp/node_modules/react-native-textinput-effects/lib/Hoshi.js"],"names":["Hoshi","props","label","containerStyle","style","inputStyle","labelStyle","maskColor","borderColor","borderHeight","inputPadding","inputHeight","height","state","width","focusedAnim","value","flatStyles","StyleSheet","flatten","containerWidth","styles","container","_onLayout","input","textInput","left","_onBlur","_onChange","_onFocus","focus","labelContainer","opacity","interpolate","inputRange","outputRange","top","labelMask","backgroundColor","border","BaseInput","propTypes","PropTypes","string","number","defaultProps","create","borderBottomWidth","borderBottomColor","position","fontSize","color","bottom","padding","fontWeight","right"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Hoshi extends BaseInput {\n  static propTypes = {\n    borderColor: PropTypes.string,\n    /*\n     * this is used to set backgroundColor of label mask.\n     * this should be replaced if we can find a better way to mask label animation.\n     */\n    maskColor: PropTypes.string,\n    inputPadding: PropTypes.number,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    borderColor: 'red',\n    inputPadding: 16,\n    height: 48,\n    borderHeight: 3,\n  };\n\n  render() {\n    const {\n      label,\n      style: containerStyle,\n      inputStyle,\n      labelStyle,\n      maskColor,\n      borderColor,\n      borderHeight,\n      inputPadding,\n      height: inputHeight,\n    } = this.props;\n    const { width, focusedAnim, value } = this.state;\n    const flatStyles = StyleSheet.flatten(containerStyle) || {};\n    const containerWidth = flatStyles.width || width;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          containerStyle,\n          {\n            height: inputHeight + inputPadding,\n            width: containerWidth,\n          },\n        ]}\n        onLayout={this._onLayout}\n      >\n        <TextInput\n          ref={this.input}\n          {...this.props}\n          style={[\n            styles.textInput,\n            inputStyle,\n            {\n              width,\n              height: inputHeight,\n              left: inputPadding,\n            },\n          ]}\n          value={value}\n          onBlur={this._onBlur}\n          onChange={this._onChange}\n          onFocus={this._onFocus}\n          underlineColorAndroid={'transparent'}\n        />\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={[\n              styles.labelContainer,\n              {\n                opacity: focusedAnim.interpolate({\n                  inputRange: [0, 0.5, 1],\n                  outputRange: [1, 0, 1],\n                }),\n                top: focusedAnim.interpolate({\n                  inputRange: [0, 0.5, 0.51, 1],\n                  outputRange: [24, 24, 0, 0],\n                }),\n                left: focusedAnim.interpolate({\n                  inputRange: [0, 0.5, 0.51, 1],\n                  outputRange: [inputPadding, 2 * inputPadding, 0, inputPadding],\n                }),\n              },\n            ]}\n          >\n            <Text style={[styles.label, labelStyle]}>\n              {label}\n            </Text>\n          </Animated.View>\n        </TouchableWithoutFeedback>\n        <View\n          style={[styles.labelMask, {\n            backgroundColor: maskColor,\n            width: inputPadding,\n          }]}\n        />\n        <Animated.View\n          style={[\n            styles.border,\n            {\n              width: focusedAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, width],\n              }),\n              backgroundColor: borderColor,\n              height: borderHeight,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderBottomWidth: 2,\n    borderBottomColor: '#b9c1ca',\n  },\n  labelContainer: {\n    position: 'absolute',\n  },\n  label: {\n    fontSize: 16,\n    color: '#6a7989',\n  },\n  textInput: {\n    position: 'absolute',\n    bottom: 2,\n    padding: 0,\n    color: '#6a7989',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  labelMask: {\n    height: 24,\n  },\n  border: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}