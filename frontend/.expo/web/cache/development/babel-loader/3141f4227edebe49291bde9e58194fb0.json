{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _BaseInput2 = _interopRequireDefault(require(\"./BaseInput\"));\n\nvar _jsxFileName = \"/home/alex/api_test/rn_testapp/node_modules/react-native-textinput-effects/lib/Fumi.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Fumi = function (_BaseInput) {\n  (0, _inherits2.default)(Fumi, _BaseInput);\n\n  var _super = _createSuper(Fumi);\n\n  function Fumi() {\n    (0, _classCallCheck2.default)(this, Fumi);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(Fumi, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          iconClass = _this$props.iconClass,\n          iconColor = _this$props.iconColor,\n          iconSize = _this$props.iconSize,\n          passiveIconColor = _this$props.passiveIconColor,\n          iconName = _this$props.iconName,\n          label = _this$props.label,\n          containerStyle = _this$props.style,\n          inputStyle = _this$props.inputStyle,\n          inputHeight = _this$props.height,\n          inputPadding = _this$props.inputPadding,\n          iconWidth = _this$props.iconWidth,\n          labelStyle = _this$props.labelStyle;\n      var _this$state = this.state,\n          focusedAnim = _this$state.focusedAnim,\n          value = _this$state.value;\n\n      var AnimatedIcon = _reactNative.Animated.createAnimatedComponent(iconClass);\n\n      var ANIM_PATH = inputPadding + inputHeight;\n      var NEGATIVE_ANIM_PATH = ANIM_PATH * -1;\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.container, containerStyle, {\n          height: ANIM_PATH\n        }],\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(AnimatedIcon, {\n        name: iconName,\n        color: iconColor,\n        size: iconSize,\n        style: {\n          position: 'absolute',\n          left: inputPadding,\n          bottom: focusedAnim.interpolate({\n            inputRange: [0, 0.5, 0.51, 0.7, 1],\n            outputRange: [24, ANIM_PATH, NEGATIVE_ANIM_PATH, NEGATIVE_ANIM_PATH, 24]\n          }),\n          color: focusedAnim.interpolate({\n            inputRange: [0, 0.5, 1],\n            outputRange: [passiveIconColor, iconColor, iconColor]\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: [styles.separator, {\n          height: inputHeight,\n          left: iconWidth + 8\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: this.focus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, {\n        style: {\n          position: 'absolute',\n          left: iconWidth + inputPadding,\n          height: inputHeight,\n          top: focusedAnim.interpolate({\n            inputRange: [0, 0.5, 0.51, 0.7, 1],\n            outputRange: [24, ANIM_PATH, NEGATIVE_ANIM_PATH, NEGATIVE_ANIM_PATH, inputPadding / 2]\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Animated.Text, {\n        style: [styles.label, {\n          fontSize: focusedAnim.interpolate({\n            inputRange: [0, 0.7, 0.71, 1],\n            outputRange: [16, 16, 12, 12]\n          }),\n          color: focusedAnim.interpolate({\n            inputRange: [0, 0.7],\n            outputRange: ['#696969', '#a3a3a3']\n          })\n        }, labelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, label))), _react.default.createElement(_reactNative.TextInput, (0, _extends2.default)({\n        ref: this.input\n      }, this.props, {\n        style: [styles.textInput, {\n          marginLeft: iconWidth + inputPadding,\n          color: iconColor\n        }, inputStyle],\n        value: value,\n        onBlur: this._onBlur,\n        onFocus: this._onFocus,\n        onChange: this._onChange,\n        underlineColorAndroid: 'transparent',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n  return Fumi;\n}(_BaseInput2.default);\n\nexports.default = Fumi;\nFumi.propTypes = {\n  iconClass: _propTypes.default.func.isRequired,\n  iconName: _propTypes.default.string.isRequired,\n  iconColor: _propTypes.default.string,\n  iconSize: _propTypes.default.number,\n  passiveIconColor: _propTypes.default.string,\n  height: _propTypes.default.number\n};\nFumi.defaultProps = {\n  height: 48,\n  iconColor: '#00aeef',\n  iconSize: 20,\n  iconWidth: 40,\n  inputPadding: 16,\n  passiveIconColor: '#a3a3a3',\n  animationDuration: 300\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    paddingTop: 16,\n    backgroundColor: 'white'\n  },\n  label: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  textInput: {\n    flex: 1,\n    color: 'black',\n    fontSize: 18,\n    padding: 7,\n    paddingLeft: 0\n  },\n  separator: {\n    position: 'absolute',\n    width: 1,\n    backgroundColor: '#f0f0f0',\n    top: 8\n  }\n});","map":{"version":3,"sources":["/home/alex/api_test/rn_testapp/node_modules/react-native-textinput-effects/lib/Fumi.js"],"names":["Fumi","props","iconClass","iconColor","iconSize","passiveIconColor","iconName","label","containerStyle","style","inputStyle","inputHeight","height","inputPadding","iconWidth","labelStyle","state","focusedAnim","value","AnimatedIcon","Animated","createAnimatedComponent","ANIM_PATH","NEGATIVE_ANIM_PATH","styles","container","_onLayout","focus","position","left","bottom","interpolate","inputRange","outputRange","color","separator","top","fontSize","input","textInput","marginLeft","_onBlur","_onFocus","_onChange","BaseInput","propTypes","PropTypes","func","isRequired","string","number","defaultProps","animationDuration","StyleSheet","create","overflow","paddingTop","backgroundColor","fontWeight","flex","padding","paddingLeft","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Fumi extends BaseInput {\n  static propTypes = {\n    /*\n     * This is the icon component you are importing from react-native-vector-icons.\n     * import FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\n     * iconClass={FontAwesomeIcon}\n     */\n    iconClass: PropTypes.func.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as name prop\n     */\n    iconName: PropTypes.string.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as color prop.\n     * Also used as textInput color.\n     */\n    iconColor: PropTypes.string,\n    /*\n     * Passed to react-native-vector-icons library as size prop.\n     */\n    iconSize: PropTypes.number,\n\n    passiveIconColor: PropTypes.string,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    height: 48,\n    iconColor: '#00aeef',\n    iconSize: 20,\n    iconWidth: 40,\n    inputPadding: 16,\n    passiveIconColor: '#a3a3a3',\n    animationDuration: 300,\n  };\n\n  render() {\n    const {\n      iconClass,\n      iconColor,\n      iconSize,\n      passiveIconColor,\n      iconName,\n      label,\n      style: containerStyle,\n      inputStyle,\n      height: inputHeight,\n      inputPadding,\n      iconWidth,\n      labelStyle,\n    } = this.props;\n    const { focusedAnim, value } = this.state;\n    const AnimatedIcon = Animated.createAnimatedComponent(iconClass);\n    const ANIM_PATH = inputPadding + inputHeight;\n    const NEGATIVE_ANIM_PATH = ANIM_PATH * -1;\n\n    return (\n      <View\n        style={[styles.container, containerStyle, {\n          height: ANIM_PATH,\n        }]}\n        onLayout={this._onLayout}\n      >\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <AnimatedIcon\n            name={iconName}\n            color={iconColor}\n            size={iconSize}\n            style={{\n              position: 'absolute',\n              left: inputPadding,\n              bottom: focusedAnim.interpolate({\n                inputRange: [0, 0.5, 0.51, 0.7, 1],\n                outputRange: [\n                  24,\n                  ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  24,\n                ],\n              }),\n              color: focusedAnim.interpolate({\n                inputRange: [0, 0.5, 1],\n                outputRange: [passiveIconColor, iconColor, iconColor],\n              }),\n            }}\n          />\n        </TouchableWithoutFeedback>\n        <View\n          style={[\n            styles.separator,\n            {\n              height: inputHeight,\n              left: iconWidth + 8,\n            },\n          ]}\n        />\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={{\n              position: 'absolute',\n              left: iconWidth + inputPadding,\n              height: inputHeight,\n              top: focusedAnim.interpolate({\n                inputRange: [0, 0.5, 0.51, 0.7, 1],\n                outputRange: [\n                  24,\n                  ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  inputPadding / 2,\n                ],\n              }),\n            }}\n          >\n            <Animated.Text\n              style={[\n                styles.label,\n                {\n                  fontSize: focusedAnim.interpolate({\n                    inputRange: [0, 0.7, 0.71, 1],\n                    outputRange: [16, 16, 12, 12],\n                  }),\n                  color: focusedAnim.interpolate({\n                    inputRange: [0, 0.7],\n                    outputRange: ['#696969', '#a3a3a3'],\n                  }),\n                },\n                labelStyle,\n              ]}\n            >\n              {label}\n            </Animated.Text>\n          </Animated.View>\n        </TouchableWithoutFeedback>\n        <TextInput\n          ref={this.input}\n          {...this.props}\n          style={[\n            styles.textInput,\n            {\n              marginLeft: iconWidth + inputPadding,\n              color: iconColor,\n            },\n            inputStyle,\n          ]}\n          value={value}\n          onBlur={this._onBlur}\n          onFocus={this._onFocus}\n          onChange={this._onChange}\n          underlineColorAndroid={'transparent'}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    paddingTop: 16,\n    backgroundColor: 'white',\n  },\n  label: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  textInput: {\n    flex: 1,\n    color: 'black',\n    fontSize: 18,\n    padding: 7,\n    paddingLeft: 0,\n  },\n  separator: {\n    position: 'absolute',\n    width: 1,\n    backgroundColor: '#f0f0f0',\n    top: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}